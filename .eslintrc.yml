env:
  es6: true
  node: true
  jest: true
extends: 'eslint:recommended'
parserOptions:
  sourceType: module
  ecmaVersion: 2018
rules:
#Possible errors
  for-direction:
    - error
  getter-return:
    - warn
  no-await-in-loop:
    - warn
  no-console:
    - off
  no-extra-parens:
    - warn
    - all
    - nestedBinaryExpressions: false
  no-prototype-builtins:
    - warn
  no-template-curly-in-string:
    - warn
  valid-jsdoc:
    - warn
#Best Practices
  accessor-pairs:
    - warn
    - setWithoutGet: true
      getWithoutSet: false
  array-callback-return:
    - warn
  block-scoped-var:
    - warn
  class-methods-use-this:
    - warn
  complexity:
    - warn
    - 20
  consistent-return:
    - warn
  default-case:
    - warn
    - commentPattern: /^no default$/i
  dot-location:
    - warn
    - property
  dot-notation:
    - warn
  eqeqeq:
    - warn
    - always
  guard-for-in:
    - warn
  no-alert:
    - warn
  no-caller:
    - warn
  no-div-regex:
    - warn
  no-else-return:
    - warn
    - allowElseIf: false
  no-empty-function:
    - warn
  no-eq-null:
    - warn
  no-eval:
    - error
  no-extend-native:
    - warn
  no-extra-bind:
    - warn
  no-extra-label:
    - warn
  no-fallthrough:
    - error
  no-floating-decimal:
    - warn
  no-implicit-coercion:
    - warn
  no-implicit-globals:
    - warn
  no-implied-eval:
    - error
  no-invalid-this:
    - warn
  no-iterator:
    - error
  no-labels:
    - warn
  no-lone-blocks:
    - warn
  no-loop-func:
    - warn
  no-magic-numbers:
    - warn
    - ignore: [0, 1, -1, 2]
      ignoreArrayIndexes: false
      enforceConst: true
      detectObjects: false
  no-multi-spaces:
    - warn
  no-multi-str:
    - warn
  no-new:
    - warn
  no-new-func:
    - warn
  no-new-wrappers:
    - warn
  no-octal-escape:
    - error
  no-param-reassign:
    - warn
  no-proto:
    - error
  no-restricted-properties:
    - error
    #None
  no-return-assign:
    - error
  no-return-await:
    - warn
  no-script-url:
    - error
  no-self-compare:
    - error
  no-sequences:
    - warn
  no-throw-literal:
    - warn
  no-unmodified-loop-condition:
    - warn
  no-unused-expressions:
    - warn
    - allowShortCircuit: false
      allowTernary: false
      allowTaggedTemplates: false
  no-useless-call:
    - warn
  no-useless-concat:
    - warn
  no-useless-return:
    - warn
  no-void:
    - error
  no-warning-comments:
    - off #Sometimes code may be shippable, but could use enhancement
  no-with:
    - error
  prefer-promise-reject-errors:
    - warn
    - allowEmptyReject: false
  radix:
    - warn
    - always
  require-await:
    - warn
  vars-on-top:
    - warn
  wrap-iife:
    - warn
    - outside
  yoda:
    - warn
    - never
    - exceptRange: false
      onlyEquality: false
#Strict Mode
  strict:
    - error
    - safe
#Variables
  init-declarations:
    - off #Sometimes need to defer initialization
  no-catch-shadow:
    - off #Not supporting IE8 or earlier
  no-label-var:
    - error
  no-restricted-globals:
    - error
    - event
    - fdescribe
  no-shadow:
    - warn
    - builtinGlobals: true
      hoist: functions
      allow:
      - ""
  no-shadow-restricted-names:
    - error
  no-undef-init:
    - error
  no-undefined:
    - error
  no-use-before-define:
    - error
#Node.js and CommonJS
  callback-return:
    - warn
    -
      - callback
      - cb
      - next
  global-require:
    - error
  handle-callback-err:
    - warn
  no-buffer-constructor:
    - error
  no-mixed-requires:
    - warn
    - grouping: false
      allowCall: false
  no-new-require:
    - error
  no-path-concat:
    - error
  no-process-env:
    - off #Environment variables commonly used in Lambdas
  no-process-exit:
    - error
  no-restricted-modules:
    - error
    #- List of modules
  no-sync:
    - warn
    - allowAtRootLevel: false
#Stylistic
  array-bracket-newline:
    - warn
    - consistent
  array-bracket-spacing:
    - warn
    - never
  array-element-newline:
    - warn
    - multiline: true
  block-spacing:
    - warn
    - always
  brace-style:
    - warn
    - 1tbs
    - allowSingleLine: false
  camelcase:
    - warn
    - properties: always
  capitalized-comments:
    - off #Doesn't seem too important?
  comma-dangle:
    - warn
    - never
  comma-spacing:
    - warn
    - before: false
      after: true
  comma-style:
    - warn
    - last
  computed-property-spacing:
    - warn
    - never
  consistent-this:
    - warn
    - self
  eol-last:
    - warn
    - always
  func-call-spacing:
    - warn
    - never
  func-name-matching:
    - warn
    - always
  func-names:
    - warn
    - always
  func-style:
    - warn
    - expression
  function-paren-newline:
    - warn
    - multiline
  id-blacklist:
    - error
    #- None currently
  id-length:
    - warn
    - min: 2
      max: 60
      properties: always
      exceptions:
        #For DynamoDB
        - S
        - B
        - L
        - M
        - N
        - _
  id-match:
    - error
    #- None currently
  indent:
    - warn
    - 2
  jsx-quotes:
    - warn
    - prefer-double
  key-spacing:
    - warn
    - beforeColon: false
      afterColon: true
      mode: strict
  keyword-spacing:
    - warn
    - before: true
      after: true
  line-comment-position:
    - warn #Use block comment for area specific and double slash for line specific
    - beside
  linebreak-style:
    - error
    - unix
  lines-around-comment:
    - off
  lines-between-class-members:
    - warn
    - always
    - exceptAfterSingleLine: true
  max-depth:
    - warn
    - max: 5
  max-len:
    - warn
    - code: 140
      tabWidth: 4
  max-lines:
    - warn
    - max: 500
      skipBlankLines: true
      skipComments: true
  max-nested-callbacks:
    - warn
    - max: 10
  max-params:
    - warn
    - max: 7
  max-statements:
    - warn
    - max: 40
  max-statements-per-line:
    - warn
    - max: 2
  multiline-comment-style:
    - warn
    - bare-block
  multiline-ternary:
    - warn
    - always-multiline
  no-array-constructor:
    - warn
  no-bitwise:
    - warn #There can be specialized use, but rare. Disable if needed.
  no-continue:
    - warn
  no-inline-comments:
    - off #Used to point to specific lines
  no-lonely-if:
    - warn
  no-mixed-operators:
    - warn
  no-multi-assign:
    - warn
  no-multiple-empty-lines:
    - warn
    - max: 2
      maxEOF: 1
      maxBOF: 1
  no-negated-condition:
    - warn
  no-nested-ternary:
    - warn
  no-new-object:
    - warn
  no-plusplus:
    - warn
    - allowForLoopAfterthoughts: true
  no-restricted-syntax:
    - error
    #- None currently
  no-tabs:
    - warn
  no-ternary:
    - off #Useful for making some statements concise
  no-trailing-spaces:
    - warn
  no-underscore-dangle:
    - off #May be needed to denote privacy
  no-unneeded-ternary:
    - warn
  no-whitespace-before-property:
    - warn
  nonblock-statement-body-position:
    - warn
    - beside
  object-curly-newline:
    - warn
    - multiline: true
  object-curly-spacing:
    - warn
    - never
  object-property-newline:
    - warn
    - allowMultiplePropertiesPerLine: true
  one-var:
    - warn
    - initialized: never
  one-var-declaration-per-line:
    - warn
    - initializations
  operator-assignment:
    - warn
    - always
  operator-linebreak:
    - warn
    - after
  padded-blocks:
    - warn
    - never
  padding-line-between-statements:
    - off
  quote-props:
    - warn
    - as-needed
    - unnecessary: false
  quotes:
    - warn
    - double
  require-jsdoc:
    - warn
    - require:
        FunctionDeclaration: true
        MethodDefinition: true
        ClassDeclaration: true
        ArrowFunctionExpression: true
        FunctionExpression: true
  semi:
    - warn
    - always
  semi-spacing:
    - warn
    - before: false
      after: true
  semi-style:
    - warn
    - last
  sort-keys:
    - off #Seems like more trouble than it's worth
  sort-vars:
    - off #Seems like more trouble than it's worth
  space-before-blocks:
    - warn
    - always
  space-before-function-paren:
    - warn
    - anonymous: always
      named: never
      asyncArrow: always
  space-in-parens:
    - warn
    - never
  space-infix-ops:
    - warn
  space-unary-ops:
    - warn
    - words: true
      nonwords: false
  spaced-comment:
    - warn
    - always
  switch-colon-spacing:
    - warn
    - after: true
      before: false
  template-tag-spacing:
    - warn
    - never
  unicode-bom:
    - warn
    - never
  wrap-regex:
    - warn
#ECMAScript 6
  arrow-body-style:
    - warn
    - always
  arrow-parens:
    - warn
    - as-needed
    - requireForBlockBody: true
  arrow-spacing:
    - warn
    - before: true
      after: true
  generator-star-spacing:
    - warn
    - after
  no-confusing-arrow:
    - warn
  no-duplicate-imports:
    - warn
  no-restricted-imports:
    - error
    #- None currently
  no-useless-computed-key:
    - warn
  no-useless-constructor:
    - warn
  no-useless-rename:
    - warn
  no-var:
    - warn
  object-shorthand:
    - warn
    - always
  prefer-arrow-callback:
    - warn
    - allowNamedFunctions: false
      allowUnboundThis: true
  prefer-const:
    - warn
    - destructuring: any
      ignoreReadBeforeAssign: false
  prefer-destructuring:
    - warn
    - array: true
      object: true
    - enforceForRenamedProperties : false
  prefer-numeric-literals:
    - warn
  prefer-rest-params:
    - warn
  prefer-spread:
     - warn
  prefer-template:
    - warn
  rest-spread-spacing:
    - warn
    - never
  sort-imports:
    - off #Seems like more trouble than it's worth
  symbol-description:
    - warn
  template-curly-spacing:
    - warn
    - never
  yield-star-spacing:
    - warn
    - after: true
      before: false
